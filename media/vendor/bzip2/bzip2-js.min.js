var ArchUtils=function(){"use strict";function t(t,i){var r=t.length;if(i>=r)throw RangeError("Out of bound");if(i<0)throw RangeError("Out of bound");var s=t;t=t.join(""),s.sort();for(var e={},o=r-1;o>=0;o--)e[s[o]]=o;var a=[];for(o=0;o<r;o++)a.push(e[t[o]]++);for(var n=s[o=i],h=[],f=1;f<r;f++)h.push(s[o=a[o]]);return n+h.reverse().join("")}function i(t,i,r){for(var s=t[i],e=i;e>0;t[e]=t[--e]);r.push(t[0]=s)}var r=function(t,i){this.code=t,this.bits=i,this.symbol=void 0},s=function(){this.process=function(t){for(var i=t.length,s=[],e=0;e<i;e++)s.push([e,t[e]]);s.push([i,-1]);for(var o=[],a=s[0],n=a[0],h=a[1],f=1;f<s.length;f++){var b=s[f][0],u=s[f][1];if(h)for(var d=n;d<b;d++)o.push(new r(d,h));if(n=b,h=u,-1==u)break}o.sort(function(t,i){return t.bits-i.bits||t.code-i.code}),this.table=o;var c=0,v=-1;this.faht=[];var l=null;for(e=0;e<this.table.length;e++){var p=this.table[e];v+=1,p.bits!=c&&(v<<=p.bits-c,l=this.faht[c=p.bits]={}),l[p.symbol=v]=p}this.min_bits=16,this.max_bits=-1,this.table.forEach(function(t){t.bits<this.min_bits&&(this.min_bits=t.bits),t.bits>this.max_bits&&(this.max_bits=t.bits)},this)}};return{bz2:{decode:function(r){var e=new function(){this.init=function(t){this.masks=[];for(var i=0;i<31;i++)this.masks[i]=(1<<i)-1;this.masks[31]=-2147483648,this.f=t,this.bits=0,this.bitfield=0,this.count=0},this.readbits2=function(t){var i=t>>1;return this.readbits(i)*(1<<i)+this.readbits(t-i)},this.readbits=function(t){for(;this.bits<t;)this.bitfield=(this.bitfield<<8)+this.f.charCodeAt(this.count++),this.bits+=8;var i=this.masks[t],r=this.bitfield>>this.bits-t&i;return this.bits-=t,this.bitfield&=~(i<<this.bits),r}};if(e.init(r),e.readbits(16),104!=e.readbits(8))throw"Unknown (not type 'h'uffman Bzip2) compression method";var o=e.readbits(8);if(!(49<=o&&o<=57))throw"Unknown (not size '1'-'9') Bzip2 blocksize";function a(t){for(var i=[],r=t.readbits(16),s=32768;s>0;s>>=1)if(r&s)for(var e=t.readbits(16),o=32768;o>0;o>>=1)i.push(Boolean(e&o));else for(var a=0;a<16;a++)i.push(!1);return i}o-=48;var n=[];return function(){for(;;){var r=e.readbits2(48);if(e.readbits2(32),54156738319193!=r){if(25779555029136==r){e.readbits(7&e.bits);break}throw"Illegal Bzip2 blocktype = 0x"+r.toString(16)}if(e.readbits(1))throw"Bzip2 randomised support not implemented";var o=e.readbits(24),h=a(e),f=e.readbits(3);if(2>f||f>6)throw RangeError("Bzip2: Number of Huffman groups not in range 2..6");for(var b=[0,1,2,3,4,5,6].slice(0,f),u=[],d=0,c=e.readbits(15);d<c;d++){for(var v=0;e.readbits(1);)if(v++>=f)throw RangeError("More than max ("+f+") groups");i(b,v,u)}for(var l=[],p=h.reduce(function(t,i){return t+i},0)+2,m=0;m<f;m++){var g=e.readbits(5),w=[];for(d=0;d<p;d++){if(g<0||g>20)throw RangeError("Bzip2 Huffman length code outside range 0..20");for(;e.readbits(1);)g-=2*e.readbits(1)-1;w.push(g)}l.push(w)}for(var k=[],z=0;z<l.length;z++){var A=new s;A.process(l[z]),k.push(A)}var C=[];for(v=h.length-1;v>=0;v--)h[v]&&C.push(String.fromCharCode(v));C.reverse();for(var B,E,_=0,x=0,R=0,j=0,y=[];;){for(var U in--x<=0&&(x=50,_<=u.length&&(B=k[u[_++]])),B.faht)if(e.bits<U&&(e.bitfield=(e.bitfield<<8)+e.f.charCodeAt(e.count++),e.bits+=8),E=B.faht[U][e.bitfield>>e.bits-U]){e.bitfield&=e.masks[e.bits-=U],E=E.code;break}if(0<=E&&E<=1)0==R&&(j=1),R+=j<<E,j<<=1;else{for(var H=C[0];R>0;R--)y.push(H);if(E==p-1)break;i(C,E-1,y)}}for(var O=t(y,o),S=[],I=(d=0,O.length);d<I;)if(v=O.charCodeAt(d),d<I-4&&O.charCodeAt(d+1)==v&&O.charCodeAt(d+2)==v&&O.charCodeAt(d+3)==v){v=O.charAt(d);for(var M=O.charCodeAt(d+4)+4;M>0;M--)S.push(v);d+=5}else S.push(O[d++]);n.push(S.join(""))}}(),n.join("")}}}}();